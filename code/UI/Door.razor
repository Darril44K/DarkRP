@using global::Entity.Interactable.Door
@using global::GameSystems
@using Sandbox;
@inherits PanelComponent


<root class="root">
  @if (!door.IsOwnable) return;

    @if (door != null && !door.IsDoorOwned())
    {
      <div class="container">
        <div class="title">For Sale</div>
        <div class="sub-title">$@(door?.Price.ToString("N0"))</div>
      </div>
      <div class="container">
        <div class="sub-title">Press R to purchase</div>
      </div>
    }
    else
    {
      if (door.DoorTitle != "")
      {
        <div class="container">
          <div class="title">@(door.DoorTitle)</div>
        </div>
      }
      <div class="container">
        <div class="title">Owned by</div>
        <div class="title">@(door.DoorOwners[0].Name)</div>
      </div>

      if (door.ShowTextIfOwner)
      {
        <div class="container">
          <div class="sub-title">Hold R to open menu</div>
          <div class="sub-title">Press Mouse1 to lock</div>
          <div class="sub-title">Press Mouse2 to unlock</div>
        </div>
      } 

      if (door.ShowTextIfCanOwn)
      {
        <div class="container">
          <div class="sub-title">You can own this door</div>
        </div>
      } 
      

    }
</root>

<style>
  .root {
    text-align: center;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-family: 'Times New Roman', serif;
    font-weight: 600;
    color: #c9c9c9;
    width: 100%;
    gap: 5px;
  }

  .container {
    background-color: #1e1e27e5;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
  }

  .title-container {
    margin-bottom:15px;
  }

  .title {
    font-size: 35px;
  }

  .sub-title {
    font-size: 20px;
  }
</style>
@code
{
  DoorLogic door { get; set; }
  [Property] public GameObject DoorPrefab { get; set; }

  protected override void OnStart()
  {
    door = DoorPrefab.Components.Get<DoorLogic>();
    Log.Info(door);
  }


  /// <summary>
  /// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
  /// </summary>
  protected override int BuildHash() => System.HashCode.Combine(door?.DoorOwners.Count,
  door?.IsOpen, door?.IsUnlocked, door?.Price, door?.DoorTitle, door.ShowTextIfCanOwn);
}
